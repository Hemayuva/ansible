---
 hosts: localhost
  become: yes
  tasks:
    - ec2_vpc_net:
        aws_access_key:
        aws_secret_key:
        cidr_block: 10.0.0.0/16
        name: my-vpc
        region: us-east-1
        state: present  # to delete Vpc then replace absent instead of presnt
      register: vpc_result

#### Internet gateway Creation #######

    - ec2_vpc_igw:
        aws_access_key:
        aws_secret_key:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: us-east-1
        state: present
        tags:
          Name: my-igw
      register: igw_result

 ## create an vpc pub subnet


    - ec2_vpc_subnet:
        aws_access_key:
        aws_secret_key:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: us-east-1
        az: us-east-1a      # az is the availability zone
        state: present
        cidr: 10.0.0.0/20
        # enable public ip
        map_public: yes
        resource_tags:
          Name: my-pub
      register: pubsubnet_result

    ## create an vpc pvt subnet


    - ec2_vpc_subnet:
        aws_access_key:
        aws_secret_key:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: us-east-1
        az: us-east-1b      # az is the availability zone
        state: present
        cidr: 10.0.16.0/20
        # enable public ip
        map_public: no
        resource_tags:
          Name: my-pvt
      register: pvtsubnet_result

## create an vpc pub route table


    - ec2_vpc_route_table:
        aws_access_key:
        aws_secret_key:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: us-east-1
        state: present
        tags:
          Name: my-pub-rt
        subnets: [ "{{ pubsubnet_result.subnet.id }}" ]
        # create routes
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{ igw_result.gateway_id }}"
      register: public_route_table

    ## create an vpc pvt route table


    - ec2_vpc_route_table:
        aws_access_key:
        aws_secret_key:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: us-east-1
        state: present
        tags:
          Name: my-pvt-rt
        subnets: [ "{{ pvtsubnet_result.subnet.id }}" ]
      register: private_route_table

   ## create an vpc security groups


    - ec2_group:
        aws_access_key:
        aws_secret_key:
        vpc_id: "{{ vpc_result.vpc.id }}"
        region: us-east-1
        state: present
        name: web-sg
        description: allow
        tags:
          Name: websg-sg
        rules:
        - proto: all
          cidr_ip: 0.0.0.0/0
          rule_desc: allow all traffic
      register: security_group_results


   ## tasks file for ec2-launch ##
    - ec2_instance:
        aws_access_key:
        aws_secret_key:
        instance_type: t2.micro
        image_id: ami-01b799c439fd5516a
        region: us-east-1
        key_name: hm
        subnet_id: "{{ pubsubnet_result.subnet.id }}"  # Use `subnet_id` instead of `vpc_subnet_id`
        wait: yes
        tags:
          Name: Ansible-instance
        user_data: |
          #!/bin/bash
           yum update -y
           yum install git -y
           yum install httpd.x86_64
           systemctl start httpd.service
           systemctl enable httpd.service
           git clone http://github.com/Hemayuva/food.git /var/www/html/

~
~
